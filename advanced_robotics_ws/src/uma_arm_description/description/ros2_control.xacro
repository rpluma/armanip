<?xml version="1.0"?>
<robot xmlns:xacro="http://wwww.ros.org/wiki/xacro">

    <!-- Hardware interface for the controller manager (Gazebo) -->
    <ros2_control name="GazeboSystem" type="system">
        <hardware>
            <plugin>mock_components/GenericSystem</plugin>
        </hardware>

        <!-- Here we include the joint_1 interface -->
        <joint name="joint_1">
            <command_interface name="effort">
                <!-- ROS uses SI units as standard, so an effort_controller connected to a rotary
                joint will output torque in Nm. -->
                <param name="min">1000</param>
                <param name="max">1000</param>
            </command_interface>
            <state_interface name="position" />
            <state_interface name="velocity" />
            <!-- <state_interface name="effort" /> -->
        </joint>

        <!-- Here we include the joint_2 interface -->
        <joint name="joint_2">
            <command_interface name="effort">
                <param name="min">1000</param>
                <param name="max">1000</param>
            </command_interface>
            <state_interface name="position" />
            <state_interface name="velocity" />
            <!-- <state_interface name="effort" /> -->
        </joint>

        <!-- 
        <sensor name="ee_ft_sensor">
            <state_interface name="force.x" />
            <state_interface name="torque.z" />
            <param name="frame_id">EE_link</param>
            <param name="fx_range">100</param>
            <param name="tz_range">15</param>
        </sensor> 
        -->
    </ros2_control>

    <!-- Gazebo plugin that tells Gazebo to use ros2 control -->
    <!-- Specify UMA brand colors for Gazebo -->
    <!-- Gazebo doesn't parse URDF colors, so we need to define them here again -->
    <material name="gazebo_uma_blue_dark">
        <color rgba="0 0.18 0.36 1" />
    </material>

    <material name="gazebo_uma_blue_light">
        <color rgba="0.168 0.569 0.816 1" />
    </material>

    <material name="gazebo_uma_pink">
        <color rgba="0.8 0 0.4 1" />
    </material>

    <gazebo reference='base_link'>
        <material>Gazebo/Blue</material>
    </gazebo>

    <gazebo reference='link_1'>
        <material>Gazebo/Turquoise </material>
    </gazebo>

    <gazebo reference='link_2'>
        <material>Gazebo/Purple</material>
    </gazebo>


    <!-- BEGIN force/torque sensor -->
    <!-- <gazebo reference="joint_EE">
        <provideFeedback>true</provideFeedback>
    </gazebo> -->
    <!-- The ft_sensor plugin -->
    <!-- <gazebo>
        <plugin filename="libgazebo_ros_ft_sensor.so" name="ee_ft_sensor">
            <updateRate>100.0</updateRate>
            <topicName>ft_sensor_topic</topicName>
            <jointName>joint_EE</jointName>
            <noise>
                <type>gaussian</type>
                <mean>0.0</mean>
                <stddev>0.003</stddev>
            </noise>
        </plugin>
    </gazebo> -->

    <!-- ROS 2 Control plugin -->
    <gazebo>
        <plugin name="gazebo_ros2_control" filename="libgazebo_ros2_control.so">
            <parameters>$(find uma_arm_description)/config/controllers.yaml</parameters>
        </plugin>
    </gazebo>

    <!-- Gazebo Joint State Publisher -->
    <gazebo>
        <plugin name="gazebo_ros_joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
            <update_rate>1000</update_rate>
            <joint_name>joint_1</joint_name>
            <joint_name>joint_2</joint_name>
        </plugin>
    </gazebo>


    <!-- The ft_sensor plugin -->
    <!-- <gazebo>
        <plugin name="ee_ft_sensor" filename="libgazebo_ros_ft_sensor.so">
            <update_rate>200</update_rate>
            <topicName>ee_ft_sensor/wrench</topicName>
            <jointName>joint_EE</jointName>
            <gaussian_noise>0.001</gaussian_noise>
        </plugin>
    </gazebo> -->


</robot>